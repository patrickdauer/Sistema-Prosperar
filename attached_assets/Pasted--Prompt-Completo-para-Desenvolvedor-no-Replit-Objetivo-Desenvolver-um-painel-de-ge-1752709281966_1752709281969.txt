

## Prompt Completo para Desenvolvedor no Replit

### Objetivo

Desenvolver um **painel de gerenciamento para envio autom√°tico de DAS-MEI** dos clientes cadastrados, integrado inicialmente com a InfoSimples, mas totalmente preparado para troca futura do fornecedor da API.

---

### FUNCIONALIDADES PRINCIPAIS

#### 1. Download e Armazenamento Autom√°tico de DAS

* **Todo dia 1¬∫ de cada m√™s**, baixar automaticamente a guia DAS-MEI de cada cliente MEI, usando a API do fornecedor (inicialmente InfoSimples) atrav√©s do CNPJ.
* Armazenar o arquivo PDF em local seguro, organizado por cliente e compet√™ncia/m√™s.
* Permitir download manual de qualquer guia pelo painel.

#### 2. Programa√ß√£o e Envio

* O envio das guias DAS N√ÉO ser√° imediato ap√≥s o download.
* O painel deve permitir programar a data de envio (ex: dia 10, 15, 18...), padr√£o ou individual por cliente.
* Na data agendada, o sistema deve:

  * Enviar o PDF da DAS por **WhatsApp** (Evolution API) e por **e-mail** (via servi√ßo robusto como SendGrid, SMTP, etc).
  * Mensagem personalizada, contendo nome do cliente, m√™s/ano e data de vencimento.

#### 3. Lembrete no Dia do Vencimento

* No dia do vencimento da DAS (ex: dia 20), enviar lembrete simples por WhatsApp e e-mail, informando que a guia **vence hoje** (sem reenvio do PDF, s√≥ lembrete de texto).

#### 4. Painel de Gerenciamento e Logs

* Listar todos os clientes MEI, mostrando nome, CNPJ, telefone(s), e-mail(s), status do download, status do envio, datas agendadas e realizadas.
* Permitir envio manual/reenvio, se desejado.
* Exibir log detalhado de cada envio e lembrete, com resposta das APIs.

---

### 5. **Aba de Gerenciamento de APIs Integradas**

> Incluir no painel uma **aba espec√≠fica para Gerenciamento das APIs** utilizadas no sistema, com recursos para:
>
> * **Visualizar e editar** informa√ß√µes das APIs ativas (ex: InfoSimples, Evolution API, SendGrid/SMTP, ou outras).
> * **Cadastrar e armazenar** de forma segura as **chaves de acesso, tokens, URLs, logins, senhas** e demais credenciais necess√°rias para cada integra√ß√£o.
> * Permitir **trocar a API ativa** de forma pr√°tica, escolhendo qual provedor ser√° usado para buscar as DAS (usando um menu ou dropdown).
> * Exibir informa√ß√µes √∫teis sobre cada API cadastrada: nome, status, √∫ltimo uso, validade dos tokens, data da √∫ltima altera√ß√£o, e link para a documenta√ß√£o.
> * Disponibilizar **campos customiz√°veis** para poss√≠veis integra√ß√µes futuras.
> * **Registrar logs** de altera√ß√µes feitas nas configura√ß√µes das APIs (quem alterou, o que foi alterado, data/hora).
> * Garantir que somente usu√°rios autorizados tenham acesso a essa aba.

---

### ARQUITETURA FLEX√çVEL PARA TROCA DE API DE DAS

> **O sistema deve ser projetado com arquitetura desacoplada (padr√£o Adapter ou Interface de Servi√ßo), para permitir troca f√°cil do fornecedor da API de DAS-MEI (atualmente InfoSimples), sem necessidade de refatorar toda a l√≥gica.**
>
> * Crie interface gen√©rica (`DASProviderService`).
> * Implemente um m√≥dulo InfoSimples e futuros m√≥dulos conforme a mesma interface.
> * Centralize a escolha do provedor via configura√ß√£o (.env ou painel de APIs).
> * Documente e oriente como adicionar novos provedores.

---

### MODELOS DE MENSAGEM

**Mensagem principal (com anexo):**

```
Ol√°, [NOME DO CLIENTE]! üëã

Segue em anexo sua Guia DAS-MEI referente ao m√™s de [M√äS/ANO].

üóìÔ∏è Data de vencimento: [DATA DE VENCIMENTO]

Por favor, realize o pagamento at√© a data informada para evitar multas.

Qualquer d√∫vida, estamos √† disposi√ß√£o!

Abra√ßos,  
[Nome do Escrit√≥rio]
```

**Lembrete do vencimento:**

```
Ol√°, [NOME DO CLIENTE]! ‚ö†Ô∏è

Lembrete: sua guia DAS-MEI **vence hoje**.

Se ainda n√£o pagou, utilize a guia que enviamos anteriormente.

Conte conosco para o que precisar!

Abra√ßos,  
[Nome do Escrit√≥rio]
```

---

### OBSERVA√á√ïES T√âCNICAS

* O armazenamento dos PDFs deve ser seguro e facilmente acess√≠vel pelo painel.
* O envio de WhatsApp e e-mail deve ser confi√°vel.
* O painel precisa ser responsivo, intuitivo e com filtros.
* C√≥digo documentado, limpo, modular, com testes.
* Sempre usar apenas a interface gen√©rica de provedor de DAS em toda a l√≥gica do sistema.

---

### INTEGRA√á√ïES SUGERIDAS

* **InfoSimples API**: [https://api.infosimples.com.br/docs/](https://api.infosimples.com.br/docs/)
* **Evolution API (WhatsApp)**: [https://evolutionapi.com.br/docs/](https://evolutionapi.com.br/docs/)
* **E-mail API (ex: SendGrid)**: [https://docs.sendgrid.com/for-developers/sending-email/api-getting-started](https://docs.sendgrid.com/for-developers/sending-email/api-getting-started)

---

### FLUXO RESUMIDO

1. **Dia 1¬∫:** Download autom√°tico e armazenamento das guias DAS-MEI usando a API selecionada (inicialmente InfoSimples).
2. **Data programada (ex: dia 10):** Envio do PDF da DAS por WhatsApp e e-mail, com mensagem personalizada.
3. **Dia do vencimento:** Apenas lembrete de que a DAS vence hoje, sem reenvio do arquivo.
4. Todo o controle, programa√ß√£o, logs e **gerenciamento de APIs** podem ser realizados pelo painel.
5. Caso o fornecedor da API mude no futuro, basta implementar novo m√≥dulo seguindo a interface gen√©rica, sem alterar as demais fun√ß√µes do sistema.

